extends layout

block content
  .jumbotron
    h1 86Duino Planter
    p.lead 86Duino is an open-source hardware for building great IoT applications and Robots. And 86Duino Planter, an IoT application, helps plants grow up automatically.
    p
      a.btn.btn-primary.btn-large(href='http://www.86duino.com/') Learn more &raquo;
  .row
    .col-md-6
      h2 Current State
      p Remaining Water
      .progress.progress-striped.active
        .progress-bar.progress-bar-info(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "remaining-water")
      p Humidity Level
      .progress.progress-striped.active
        .progress-bar.progress-bar-success(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "humidity-level")
      p Relative Humidity
      .progress.progress-striped.active
        .progress-bar.progress-bar-warning(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "relative-humidity")
      p Temperature
      .progress.progress-striped.active
        .progress-bar.progress-bar-danger(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "temperature")
      p Atmospheric pressure
      .progress.progress-striped.active
        .progress-bar.progress-bar-success(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "atmospheric-pressure")
      p Altitude height 
      .progress.progress-striped.active
        .progress-bar.progress-bar-info(role="progressbar", aria-valuenow="0", aria-valuemin="0", aria-valuemax="100", style="width: 0%", id = "Altitude")
      script(src='https://cdn.socket.io/socket.io-1.2.1.js')
      p
        a.btn.btn-default(onmousedown='water();' , onmouseup='stopwater();') Water
      p
        canvas#myChart(width='400', height='200')
        label.checkbox-inline
          input(type='radio', name='display', checked='checked', onclick="choice(10)")
          |  10
         label.checkbox-inline
          input(type='radio', name='display', onclick="choice(20)")
          |  20
         label.checkbox-inline
          input(type='radio', name='display', onclick="choice(30)")
          |  30
         label.checkbox-inline
          input(type='radio', name='display', onclick="choice(-1)")
          |  All
    script.
      var socket = io.connect();
      socket.on('update', function(data){
        interval(data);
      });
      socket.on('getJSON', function(data){
        lineChartData.data.labels=[];
        lineChartData.data.datasets[0].data = [];
        lineChartData.data.datasets[1].data = [];
        data.forEach(getJSON);
        myLine = new Chart.Line(ctx,lineChartData);
      });
      socket.emit('webStart');
    .col-md-6
      script(src="http://d3js.org/d3.v3.min.js")
      h2 Live Stream
      p
        .img-thumbnail.center-block
          img(id='stream')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.3/Chart.min.js')
    script.
       var imgsrc = 'http://' + location.hostname + ':8080/?action=stream';
       $(document).ready(function() {
        $('#stream').attr('src', imgsrc);
       });
       Chart.defaults.global.events = ["click"];
       var lineChartData = {
         type: 'line',
         data: {
          labels: [],
          datasets: [
           {
            label: "Remaining History",
            fill: false,
            backgroundColor: "rgba(75,75,192,0.4)",
            borderColor: "rgba(75,75,192,1)",
            pointBorderColor: "rgba(75,75,192,1)",
            pointBackgroundColor: "#fff",
            pointHoverBackgroundColor: "rgba(75,75,192,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: []
           },{
            label: "Humidity History",
            fill: false,
            backgroundColor: "rgba(75,192,75,0.4)",
            borderColor: "rgba(75,192,75,1)",
            pointBorderColor: "rgba(75,192,75,1)",
            pointBackgroundColor: "#fff",
            pointHoverBackgroundColor: "rgba(75,192,75,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: []
           },{
            label: "Air humidity History",
            fill: false,
            backgroundColor: "rgba(128,75,75,0.4)",
            borderColor: "rgba(128,75,75,1)",
            pointBorderColor: "rgba(128,75,75,1)",
            pointBackgroundColor: "#fff",
            pointHoverBackgroundColor: "rgba(128,75,75,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: []
           },{
            label: "Temperature History",
            fill: false,
            backgroundColor: "rgba(75,128,75,0.4)",
            borderColor: "rgba(75,128,75,1)",
            pointBorderColor: "rgba(75,128,75,1)",
            pointBackgroundColor: "#fff",
            pointHoverBackgroundColor: "rgba(75,128,75,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: []
           },{
            label: "Atmospheric pressure History",
            fill: false,
            backgroundColor: "rgba(75,75,128,0.4)",
            borderColor: "rgba(75,75,128,1)",
            pointBorderColor: "rgba(75,75,128,1)",
            pointBackgroundColor: "#fff",
            pointHoverBackgroundColor: "rgba(75,75,128,1)",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: []
           }
          ]
         },
         options: {
          scales: {
           yAxes: [{
            ticks: {
             beginAtZero:true,
             max:100
            }
           }]
          }
         },
         animation:{
          animateScale:false
         }
       };
       var ctx = document.getElementById("myChart");
       var myChart;

